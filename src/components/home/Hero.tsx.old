'use client';

import React, { useRef } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import Button from '@/components/ui/Button';
import { useRippleEffect } from '@/hooks/useRippleEffect';
import { motion, useInView, useScroll, useTransform } from 'framer-motion';

// Variants pour les animations Framer Motion
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
      delayChildren: 0.3
    }
  }
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      type: "spring" as const,
      stiffness: 100,
      damping: 12
    }
  }
};

// Style global pour les boutons d'action
const buttonBaseStyle = "flex items-center justify-center px-6 py-3 rounded-lg text-base font-medium transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 shadow-md";

// Composant pour les badges de services
interface ServiceBadgeProps {
  text: string;
  delay: string;
}

const ServiceBadge = ({ text, delay }: ServiceBadgeProps) => (
  <motion.div 
    className="inline-block bg-blue-800 bg-opacity-80 backdrop-blur-sm text-white text-sm font-medium px-4 py-2 rounded-full shadow-md"
    initial={{ opacity: 0, x: -20 }}
    animate={{ opacity: 1, x: 0 }}
    transition={{ 
      delay: parseFloat(delay), 
      duration: 0.5, 
      type: "spring" as const, 
      stiffness: 100 
    }}
    whileHover={{ 
      scale: 1.05,
      backgroundColor: "rgba(30, 64, 175, 0.9)",
      boxShadow: "0 8px 16px -2px rgba(30, 64, 175, 0.3)"
    }}
  >
    {text}
  </motion.div>
);

const Hero = () => {
  // Hook pour l'effet ripple sur les boutons
  const { createRipple } = useRippleEffect();
  
  // Référence pour détecter quand le composant est visible
  const heroRef = useRef(null);
  const isInView = useInView(heroRef, { once: true, margin: "-100px" });
  
  // Effet de parallax pour les éléments décoratifs
  const { scrollYProgress } = useScroll({
    target: heroRef,
    offset: ["start end", "end start"]
  });
  
  const decorY1 = useTransform(scrollYProgress, [0, 1], [0, -50]);
  const decorY2 = useTransform(scrollYProgress, [0, 1], [0, -80]);
  const decorY3 = useTransform(scrollYProgress, [0, 1], [0, -30]);
  
  return (
    <div ref={heroRef} className="relative bg-gradient-to-b from-white to-blue-50 pt-8 pb-12 overflow-hidden">
      {/* Éléments décoratifs d'arrière-plan */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <motion.div 
          className="absolute -top-12 -left-12 w-72 h-72 bg-blue-100 rounded-full opacity-40 blur-3xl"
          style={{ y: decorY1 }}
          initial={{ opacity: 0 }}
          animate={{ opacity: 0.4 }}
          transition={{ duration: 1.2 }}
        ></motion.div>
        <motion.div 
          className="absolute top-1/4 right-0 w-80 h-80 bg-blue-50 rounded-full opacity-60 blur-3xl"
          style={{ y: decorY2 }}
          initial={{ opacity: 0 }}
          animate={{ opacity: 0.6 }}
          transition={{ duration: 1.5 }}
        ></motion.div>
        <motion.div 
          className="absolute bottom-0 left-1/4 w-64 h-64 bg-blue-200 rounded-full opacity-30 blur-3xl"
          style={{ y: decorY3 }}
          initial={{ opacity: 0 }}
          animate={{ opacity: 0.3 }}
          transition={{ duration: 1.8 }}
        ></motion.div>
        {/* Vagues décoratives */}
        <div className="absolute bottom-0 left-0 right-0 h-24 opacity-10">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" className="w-full">
            <path fill="currentColor" className="text-blue-700" fillOpacity="1" d="M0,128L48,144C96,160,192,192,288,186.7C384,181,480,139,576,138.7C672,139,768,181,864,181.3C960,181,1056,139,1152,122.7C1248,107,1344,117,1392,122.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
          </svg>
        </div>
      </div>
      
      <div className="max-w-7xl mx-auto relative z-10 px-4 sm:px-6 lg:px-8">
        <motion.div className="container mx-auto px-6 flex flex-col md:flex-row items-center justify-between gap-10 z-10">
        {/* Contenu principal (côté gauche) */}
        <div className="flex-1">
          <div className="max-w-xl">
            <motion.div 
              variants={containerVariants}
              initial="hidden"
              animate={isInView ? "visible" : "hidden"}
              className="space-y-6"
            >
              {/* En-tête avec badges animés */}
              <div className="space-y-2">
                <ServiceBadge text="Courtage" delay="0.2" />
                <div className="space-x-2 mt-3">
                  <ServiceBadge text="Audit" delay="0.4" />
                  <ServiceBadge text="Conseil" delay="0.6" />
                </div>
              </div>
              
              {/* Titre principal */}
              <motion.h1 
                variants={itemVariants} 
                className="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight"
              >
                Cabinet de <span className="text-blue-700">courtage</span>
              </motion.h1>
              
              {/* Description */}
              <motion.p 
                variants={itemVariants}
                className="text-lg text-gray-700 max-w-lg"
              >
                SIA Assurances met à votre service toute une expertise acquise dans le domaine des assurances de biens, de personnes et de responsabilités.
              </motion.p>
              
              {/* Boutons d'action */}
              <motion.div variants={itemVariants} className="flex flex-col sm:flex-row items-center gap-4 pt-2">
                <Link 
                  href="/devis" 
                  onClick={createRipple}
                  className={`${buttonBaseStyle} bg-blue-600 hover:bg-blue-700 text-white focus:ring-blue-500 w-full sm:w-auto`}
                >
                  <span>Contactez-moi</span>
                  <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                </Link>
                <Link 
                  href="/services" 
                  onClick={createRipple}
                  className={`${buttonBaseStyle} bg-white border border-blue-200 text-blue-600 hover:bg-blue-50 focus:ring-blue-200 w-full sm:w-auto`}
                >
                  <span>Nos services</span>
                  <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                  </svg>
                </Link>
              </motion.div>
            </motion.div>

            {/* Badges de confiance */}
            <motion.div 
              className="flex flex-wrap items-center gap-6 mt-12"
              initial={{ opacity: 0, y: 20 }}
              animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
              transition={{ delay: 0.8, duration: 0.5 }}
            >
              <div className="flex items-center">
                <div className="bg-blue-100 p-2 rounded-full">
                  <svg className="w-6 h-6 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                  </svg>
                </div>
                <span className="ml-2 text-sm font-medium text-gray-700">Expertise reconnue</span>
              </div>
              <div className="flex items-center">
                <div className="bg-blue-100 p-2 rounded-full">
                  <svg className="w-6 h-6 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <span className="ml-2 text-sm font-medium text-gray-700">Réponse sous 24h</span>
              </div>
              <div className="flex items-center">
                <div className="bg-blue-100 p-2 rounded-full">
                  <svg className="w-6 h-6 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                </div>
                <span className="ml-2 text-sm font-medium text-gray-700">Courtier indépendant</span>
              </div>
            </motion.div>
          </div>
        </div>    {/* Overlay gradient - avec correction du problème de bande noire */}
            <motion.div 
              className="relative h-full bg-gradient-to-br from-blue-700 to-blue-900 rounded-2xl overflow-hidden shadow-xl"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.3 }}
              whileHover={{ 
                boxShadow: "0 25px 50px -12px rgba(0, 0, 0, 0.3)",
                y: -5
              }}
            >
              {/* Motif décoratif */}
              <div className="absolute inset-0 opacity-15">
                <svg width="100%" height="100%" viewBox="0 0 100 100" fill="none">
                  <pattern id="grid" width="12" height="12" patternUnits="userSpaceOnUse">
                    <rect width="1" height="1" fill="#FFFFFF"></rect>
                  </pattern>
                  <rect width="100" height="100" fill="url(#grid)"></rect>
                </svg>
              </div>
              
              {/* Contenu de la partie droite */}
              <div className="relative h-full flex flex-col items-center justify-center p-8 z-10 py-16 lg:py-20">
                {/* Image symbolique de construction */}
                <motion.div 
                  className="mb-10" 
                  whileHover={{ scale: 1.05 }}
                  transition={{ type: "spring" as const, stiffness: 400, damping: 10 }}
                >
                  <motion.div 
                    className="relative w-44 h-44 md:w-56 md:h-56 flex items-center justify-center rounded-full bg-white/10 backdrop-blur-sm"
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: 0.6, duration: 0.5 }}
                    whileHover={{ boxShadow: "0 0 30px rgba(255,255,255,0.2)" }}
                  >
                    <motion.div 
                      className="absolute inset-1.5 rounded-full bg-white/5 backdrop-blur-sm border border-white/20"
                      animate={{ 
                        boxShadow: ["0 0 0px rgba(255,255,255,0.2)", "0 0 20px rgba(255,255,255,0.4)", "0 0 0px rgba(255,255,255,0.2)"] 
                      }}
                      transition={{ duration: 5, repeat: Infinity }}
                    ></motion.div>
                    <div className="relative z-10 text-white text-center">
                      <motion.div 
                        className="font-bold text-4xl md:text-5xl mb-2"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ delay: 0.8 }}
                      >10+</motion.div>
                      <motion.div 
                        className="text-md md:text-lg font-medium"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ delay: 1 }}
                      >Années d'expérience</motion.div>
                    </div>
                  </motion.div>
                </motion.div>
                
                <div className="text-center">
                  <h2 className="text-white text-xl md:text-3xl font-bold mb-4">
                    Cabinet<br/>d'expertise
                  </h2>
                  <p className="text-blue-100 text-md md:text-lg max-w-md mx-auto">
                    Un accompagnement personnalisé dans le domaine des assurances de biens, de personnes et de responsabilités
                  </p>
                </div>
                
                {/* Indicateurs de confiance */}
                <div className="mt-10 w-full grid grid-cols-2 gap-6 max-w-md mx-auto">
                  <div className="bg-white/10 backdrop-blur-sm rounded-xl p-4 text-center shadow-lg">
                    <div className="text-white text-2xl md:text-3xl font-bold">1000+</div>
                    <div className="text-blue-100 text-sm">Clients satisfaits</div>
                  </div>
                  <div className="bg-white/10 backdrop-blur-sm rounded-xl p-4 text-center shadow-lg">
                    <div className="text-white text-2xl md:text-3xl font-bold">99%</div>
                    <div className="text-blue-100 text-sm">Taux de satisfaction</div>
                  </div>
                </div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;

// Remarque: Les animations CSS keyframes ne sont plus nécessaires car nous utilisons maintenant Framer Motion

